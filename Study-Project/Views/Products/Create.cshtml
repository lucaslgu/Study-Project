@model Study_Project.Models.ViewModels.ProductViewModel
@{
    ViewData["Title"] = "Adicionar Produto";
    var categories = Model.CategorySelect;
}

<h1>Adicionar Produto</h1>

<h4>Produto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Value" class="control-label"></label>
                <input asp-for="Value" class="form-control" />
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategorySelect" class="control-label"></label>
                <select name="categoryId" class="form-control">
                    @if (categories != null)
                    {
                        @foreach (var item in categories)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    }
                </select>
                <a asp-controller="Categories" asp-action="Create">Adicionar nova categoria</a>
                <span asp-validation-for="CategorySelect" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Adicionar produto" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Voltar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
